#include "cliente.h"

t_log *logger;

int main(void) {
	int cliente_fd;
	char *ip, *puerto;
	tsDatos dato;

	logger = log_create("cl.log", "CLIENTE", true, LOG_LEVEL_TRACE);
	leer_config(&ip, &puerto);
	cliente_fd = crear_conexion(ip, puerto);

	cargar_struct(&dato);
	crear_paquete();

	close(cliente_fd);
	return EXIT_SUCCESS;
}

int crear_conexion(char *ip, char *puerto) {
	struct addrinfo condiciones, *server_info;
	int cliente_fd;

	memset(&condiciones, 0, sizeof(condiciones));
	condiciones.ai_family = AF_INET;
	condiciones.ai_socktype = SOCK_STREAM;

	getaddrinfo(ip, puerto, &condiciones, &server_info);

	cliente_fd = socket(
		server_info->ai_family, server_info->ai_socktype, server_info->ai_protocol
	);

	freeaddrinfo(server_info);

	if(cliente_fd == -1) {
		log_info(logger, "no se ha podido establecer una conexion con el servidor");
		exit(EXIT_FAILURE);
	}

	if(connect(cliente_fd, server_info->ai_addr, server_info->ai_addrlen) == -1) {
		log_info(logger, "no se ha podido establecer una conexion con el servidor");
		exit(EXIT_FAILURE);
	}

	log_info(logger, "Se ha realizado la conexion con exito");

	return cliente_fd;
}

void cargar_struct(tsDatos *dato) {
	dato->num = 14;
	dato->nombre = "Valentin";

	log_debug(logger, "%d, %s", dato->num, dato->nombre);
}
